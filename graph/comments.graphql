type Post {
  id: ID!
  title: String!
  author: String!
  content: String!
  allowComments: Boolean!
  createdAt: Timestamp!
  replies(limit: Int! = 10, afterID: Int! = 0): [Comment!]!
}

type Comment {
  id: ID!
  postId: ID!
  parentId: ID
  text: String!
  author: String!
  createdAt: Timestamp!
  hasReplies: Boolean!
}

input NewPost {
  title: String!
  content: String!
  author: String!
  allowComments: Boolean!
}

input NewComment {
  postId: ID!
  parentId: ID
  text: String!
  author: String!
}

type Query {
  Posts: [Post!]!
  Post(id: ID!): Post!
  Comments(postId: ID!, parentId: ID, limit: Int! = 10, afterID: Int! = 0): [Comment!]!
}

type Mutation {
  createPost(input: NewPost!): Post!
  createComment(input: NewComment!): Comment!
}

type Subscription {
  newComment(postId: ID!): Comment!
}

schema {  
  query: Query
  mutation: Mutation
  subscription: Subscription
}

scalar Timestamp
